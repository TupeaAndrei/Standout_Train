// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Standout_Train.DAL.Context;

#nullable disable

namespace Standout_Train.DAL.Migrations
{
    [DbContext(typeof(TrainContext))]
    [Migration("20220623193028_NullableCostumer")]
    partial class NullableCostumer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Standout_Train.DAL.Models.Achievments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AquiredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Achievment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AquiredDate = new DateTime(2022, 6, 23, 22, 30, 28, 168, DateTimeKind.Local).AddTicks(5522),
                            CustomerId = 1,
                            Description = "",
                            Name = "Client Silver"
                        },
                        new
                        {
                            Id = 2,
                            AquiredDate = new DateTime(2022, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            Description = "",
                            Name = "Client Bronze"
                        });
                });

            modelBuilder.Entity("Standout_Train.DAL.Models.County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("County");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "B (Bucuresti)"
                        },
                        new
                        {
                            Id = 2,
                            Name = "AB (Alba)"
                        },
                        new
                        {
                            Id = 3,
                            Name = "AR (Arad)"
                        },
                        new
                        {
                            Id = 4,
                            Name = "AG (Arges)"
                        },
                        new
                        {
                            Id = 5,
                            Name = "BC (Bacau)"
                        },
                        new
                        {
                            Id = 6,
                            Name = "BH (Bihor)"
                        },
                        new
                        {
                            Id = 7,
                            Name = "BN (Bistrita-Nasaud)"
                        },
                        new
                        {
                            Id = 8,
                            Name = "BT (Botosani)"
                        },
                        new
                        {
                            Id = 9,
                            Name = "BV (Brasov)"
                        },
                        new
                        {
                            Id = 10,
                            Name = "BR (Braila)"
                        },
                        new
                        {
                            Id = 11,
                            Name = "BZ(Buzau)"
                        },
                        new
                        {
                            Id = 12,
                            Name = "CS (Caras-Severin)"
                        },
                        new
                        {
                            Id = 13,
                            Name = "CL (Calarasi)"
                        },
                        new
                        {
                            Id = 14,
                            Name = "CJ (Cluj)"
                        },
                        new
                        {
                            Id = 15,
                            Name = "CT (Constanta)"
                        },
                        new
                        {
                            Id = 16,
                            Name = "CV (Covasna)"
                        },
                        new
                        {
                            Id = 17,
                            Name = "DB (Dambovita)"
                        },
                        new
                        {
                            Id = 18,
                            Name = "DJ (Dolj)"
                        },
                        new
                        {
                            Id = 19,
                            Name = "GL (Galati)"
                        },
                        new
                        {
                            Id = 20,
                            Name = "GR (Giurgiu)"
                        },
                        new
                        {
                            Id = 21,
                            Name = "GJ (Gorj)"
                        },
                        new
                        {
                            Id = 22,
                            Name = "HR (Harghita)"
                        },
                        new
                        {
                            Id = 23,
                            Name = "HD (Hunedoara)"
                        },
                        new
                        {
                            Id = 24,
                            Name = "IL (Ialomita)"
                        },
                        new
                        {
                            Id = 25,
                            Name = "IS (Iasi)"
                        },
                        new
                        {
                            Id = 26,
                            Name = "MM (Maramures)"
                        },
                        new
                        {
                            Id = 27,
                            Name = "MS (Mures)"
                        },
                        new
                        {
                            Id = 28,
                            Name = "NT (Neamt)"
                        },
                        new
                        {
                            Id = 29,
                            Name = "OT (Olt)"
                        },
                        new
                        {
                            Id = 30,
                            Name = "PH (Prahova)"
                        },
                        new
                        {
                            Id = 31,
                            Name = "SM (Satu Mare)"
                        },
                        new
                        {
                            Id = 32,
                            Name = "SB (Sibiu)"
                        },
                        new
                        {
                            Id = 33,
                            Name = "SV (Suceava)"
                        },
                        new
                        {
                            Id = 34,
                            Name = "TR (Teleorman)"
                        },
                        new
                        {
                            Id = 35,
                            Name = "TM (Timis)"
                        },
                        new
                        {
                            Id = 36,
                            Name = "TL (Tulcea)"
                        },
                        new
                        {
                            Id = 37,
                            Name = "VL (Valcea)"
                        },
                        new
                        {
                            Id = 38,
                            Name = "VS (Vaslui)"
                        },
                        new
                        {
                            Id = 39,
                            Name = "VN (Vrancea)"
                        });
                });

            modelBuilder.Entity("Standout_Train.DAL.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("EmailAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Str Libertatii",
                            Age = 22,
                            EmailAdress = "andreichris55@yahoo.com",
                            FirstName = "Tupea",
                            LastName = "Andrei",
                            LoyaltyPoints = 25,
                            PhoneNumber = "0746670688",
                            ZipCode = "525200"
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Strada Iazului",
                            Age = 21,
                            EmailAdress = "papuclucian@gmail.com",
                            FirstName = "Papuc",
                            LastName = "Lucian",
                            LoyaltyPoints = 5,
                            PhoneNumber = "0756684988",
                            ZipCode = "535200"
                        },
                        new
                        {
                            Id = 3,
                            Adress = "Strada Iuliu Maniu",
                            Age = 24,
                            EmailAdress = "aCatalin@gmail.com",
                            FirstName = "Alexandrescu",
                            LastName = "Catalin",
                            LoyaltyPoints = 0,
                            PhoneNumber = "0756684755",
                            ZipCode = "500100"
                        });
                });

            modelBuilder.Entity("Standout_Train.DAL.Models.Society", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Society");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(1998, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Companie detinuta de statul roman infiintata prin reorganizarea fostului CFR.",
                            Name = "CFRCalatori"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2002, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Firma este deţinută de producătorul de material rulant Softronic.Întregul material rulant al companiei este produs de firma - mamă.",
                            Name = "Softrans"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2001, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Companie de transport feroviar privata situatie in Transilvania.",
                            Name = "Interregional Calatori"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2014, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Printr-o politică de îmbunătățire a serviciilor ASTRA TRANS CARPATIC SRL va satisface într-o măsură cât mai mare așteptările pasagerilor, prin creșterea calității călătoriei cu trenul, în pas cu evoluția lumii moderne.",
                            Name = "ASTRA TRANS CARPATIC SRL"
                        });
                });

            modelBuilder.Entity("Standout_Train.DAL.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Station");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountyId = 35,
                            Name = "Anina"
                        },
                        new
                        {
                            Id = 2,
                            CountyId = 25,
                            Name = "Banca"
                        },
                        new
                        {
                            Id = 3,
                            CountyId = 25,
                            Name = "Bicaz"
                        },
                        new
                        {
                            Id = 4,
                            CountyId = 25,
                            Name = "Botosani"
                        },
                        new
                        {
                            Id = 5,
                            CountyId = 19,
                            Name = "Asau"
                        },
                        new
                        {
                            Id = 6,
                            CountyId = 19,
                            Name = "Barbosi"
                        },
                        new
                        {
                            Id = 7,
                            CountyId = 19,
                            Name = "Berca"
                        },
                        new
                        {
                            Id = 8,
                            CountyId = 15,
                            Name = "Constanta"
                        },
                        new
                        {
                            Id = 9,
                            CountyId = 15,
                            Name = "Costinesti"
                        },
                        new
                        {
                            Id = 10,
                            CountyId = 14,
                            Name = "Beius"
                        },
                        new
                        {
                            Id = 11,
                            CountyId = 14,
                            Name = "Benesat"
                        },
                        new
                        {
                            Id = 12,
                            CountyId = 14,
                            Name = "Boju"
                        },
                        new
                        {
                            Id = 13,
                            CountyId = 1,
                            Name = "Azuga"
                        },
                        new
                        {
                            Id = 14,
                            CountyId = 1,
                            Name = "Armasesti"
                        },
                        new
                        {
                            Id = 15,
                            CountyId = 1,
                            Name = "Bucuresti Baneasa"
                        },
                        new
                        {
                            Id = 16,
                            CountyId = 1,
                            Name = "Bucuresti Grivita"
                        },
                        new
                        {
                            Id = 17,
                            CountyId = 1,
                            Name = "Bucuresti nord"
                        },
                        new
                        {
                            Id = 18,
                            CountyId = 1,
                            Name = "Bucuresti Vest"
                        },
                        new
                        {
                            Id = 19,
                            CountyId = 1,
                            Name = "Bucuresti sud"
                        },
                        new
                        {
                            Id = 20,
                            CountyId = 9,
                            Name = "Aiud"
                        },
                        new
                        {
                            Id = 21,
                            CountyId = 9,
                            Name = "Augustin"
                        },
                        new
                        {
                            Id = 22,
                            CountyId = 9,
                            Name = "Brasov"
                        },
                        new
                        {
                            Id = 23,
                            CountyId = 9,
                            Name = "Cata"
                        },
                        new
                        {
                            Id = 24,
                            CountyId = 9,
                            Name = "Cristian"
                        },
                        new
                        {
                            Id = 25,
                            CountyId = 9,
                            Name = "Fagaras"
                        },
                        new
                        {
                            Id = 26,
                            CountyId = 9,
                            Name = "Ghimbav"
                        });
                });

            modelBuilder.Entity("Standout_Train.DAL.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AqquiredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("Standout_Train.DAL.Models.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArrivalCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("ArrivalTime")
                        .HasColumnType("time");

                    b.Property<string>("DepartureCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("DepartureTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<double>("RouteDistance")
                        .HasColumnType("float");

                    b.Property<int>("SocietyId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Train");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalCity = "Bucuresti",
                            ArrivalTime = new TimeSpan(0, 3, 58, 0, 0),
                            DepartureCity = "Brasov",
                            DepartureTime = new TimeSpan(0, 1, 17, 0, 0),
                            Name = "IRN1941",
                            Number = 1941,
                            RouteDistance = 165.0,
                            SocietyId = 3,
                            Type = "IRN"
                        },
                        new
                        {
                            Id = 2,
                            ArrivalCity = "Bucuresti",
                            ArrivalTime = new TimeSpan(0, 5, 5, 0, 0),
                            DepartureCity = "Brasov",
                            DepartureTime = new TimeSpan(0, 2, 22, 0, 0),
                            Name = "IRN1932",
                            Number = 1932,
                            RouteDistance = 165.0,
                            SocietyId = 3,
                            Type = "IRN"
                        },
                        new
                        {
                            Id = 3,
                            ArrivalCity = "Bucuresti",
                            ArrivalTime = new TimeSpan(0, 19, 34, 0, 0),
                            DepartureCity = "Brasov",
                            DepartureTime = new TimeSpan(0, 16, 56, 0, 0),
                            Name = "IR1734",
                            Number = 1734,
                            RouteDistance = 166.0,
                            SocietyId = 1,
                            Type = "IR"
                        },
                        new
                        {
                            Id = 4,
                            ArrivalCity = "Bucuresti",
                            ArrivalTime = new TimeSpan(0, 19, 58, 0, 0),
                            DepartureCity = "Brasov",
                            DepartureTime = new TimeSpan(0, 17, 25, 0, 0),
                            Name = "R-E11536",
                            Number = 1136,
                            RouteDistance = 166.0,
                            SocietyId = 4,
                            Type = "R-E"
                        },
                        new
                        {
                            Id = 5,
                            ArrivalCity = "Bucuresti",
                            ArrivalTime = new TimeSpan(0, 21, 13, 0, 0),
                            DepartureCity = "Brasov",
                            DepartureTime = new TimeSpan(0, 18, 38, 0, 0),
                            Name = "R-E11538",
                            Number = 11538,
                            RouteDistance = 166.0,
                            SocietyId = 4,
                            Type = "R-E"
                        },
                        new
                        {
                            Id = 6,
                            ArrivalCity = "Constanta",
                            ArrivalTime = new TimeSpan(0, 6, 29, 0, 0),
                            DepartureCity = "Brasov",
                            DepartureTime = new TimeSpan(0, 1, 8, 0, 0),
                            Name = "IRN1941",
                            Number = 1941,
                            RouteDistance = 383.0,
                            SocietyId = 1,
                            Type = "IRN"
                        },
                        new
                        {
                            Id = 7,
                            ArrivalCity = "Constanta",
                            ArrivalTime = new TimeSpan(0, 11, 32, 0, 0),
                            DepartureCity = "Brasov",
                            DepartureTime = new TimeSpan(0, 7, 12, 0, 0),
                            Name = "IRN1884",
                            Number = 1884,
                            RouteDistance = 390.0,
                            SocietyId = 1,
                            Type = "IRN"
                        },
                        new
                        {
                            Id = 8,
                            ArrivalCity = "Bucuresti",
                            ArrivalTime = new TimeSpan(0, 7, 10, 0, 0),
                            DepartureCity = "Brasov",
                            DepartureTime = new TimeSpan(0, 18, 38, 0, 0),
                            Name = "IRN1741",
                            Number = 1741,
                            RouteDistance = 649.0,
                            SocietyId = 1,
                            Type = "IRN"
                        },
                        new
                        {
                            Id = 9,
                            ArrivalCity = "Sibiu",
                            ArrivalTime = new TimeSpan(0, 15, 41, 0, 0),
                            DepartureCity = "Bucuresti",
                            DepartureTime = new TimeSpan(0, 9, 55, 0, 0),
                            Name = "IR1623",
                            Number = 1623,
                            RouteDistance = 315.0,
                            SocietyId = 1,
                            Type = "IR"
                        });
                });

            modelBuilder.Entity("Standout_Train.DAL.Models.TrainStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("StationId")
                        .HasColumnType("int");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrainStation");
                });
#pragma warning restore 612, 618
        }
    }
}
